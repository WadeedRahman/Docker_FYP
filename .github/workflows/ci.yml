name: CI/CD Pipeline Update

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build Docker images
      run: |
        docker build -t wadeed/fyp_1:v1 React2/myapp
        docker build -t wadeed/fyp_1:v2 backend

    - name: Run frontend tests
      run: |
        # Uncomment the following lines to run frontend tests
        # docker run --rm -it wadeed/fyp_1:v1 npm test -- --coverage

    - name: Run backend tests
      run: |
        # Uncomment the following lines to run backend tests
        # docker run --rm -it wadeed/fyp_1:v2 pytest --rootdir=/app/backend

  cd:
    runs-on: ubuntu-latest
    needs: build_and_test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Pull Docker images from Docker Hub
      run: |
        docker pull wadeed/fyp_1:v1
        docker pull wadeed/fyp_1:v2

    - name: Scan Docker images with Trivy
      run: |
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image wadeed/fyp_1:v1
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image wadeed/fyp_1:v2

    - name: Install kubectl
      run: |
        sudo apt-get update && sudo apt-get install -y apt-transport-https
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
        echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
        sudo apt-get update
        sudo apt-get install -y kubectl

    - name: Deploy images to Kubernetes
      run: |
        kubectl create deployment myapp-v1 --image=wadeed/fyp_1:v1
        kubectl expose deployment myapp-v1 --type=NodePort --port=8080

        kubectl create deployment myapp-v2 --image=wadeed/fyp_1:v2
        kubectl expose deployment myapp-v2 --type=NodePort --port=8080

        kubectl get deployments
