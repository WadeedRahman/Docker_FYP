name: CI/CD Pipeline Update

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx (optional for faster builds)
      uses: docker/setup-buildx-action@v3  # Use if needed

    - name: Build Docker images
      run: docker-compose -f docker-compose.yml build  # Assuming resolved issues

    - name: Run frontend tests
      run: docker-compose -f docker-compose.yml run frontend npm test -- --coverage  # Uncomment if needed

    - name: Run backend tests
      run: docker-compose -f docker-compose.yml run backend pytest --rootdir=/app/backend  # Uncomment if needed

  cd:  # Assuming successful build in build_and_test
    runs-on: ubuntu-latest
    needs: build_and_test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image (using tags from build_and_test)
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ./  # Replace with your build context if different
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/fyp_1:latest  # Or use dynamic tags based on build version

    - name: Set up Minikube
      uses: manusa/actions-setup-minikube@v2.5.0
      with:
        minikube version: 'latest'
        start: true
        driver: docker

    - name: Deploy to Minikube (assuming deployment.yml and service.yml are ready)
      run: |
        kubectl apply -f k8s/deployment.yml
        kubectl apply -f k8s/service.yml
